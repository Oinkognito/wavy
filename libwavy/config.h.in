#pragma once

/* Auto-generated by CMake - DO NOT EDIT MANUALLY */
#define WAVY_BUILD_DIRECTORY "@CMAKE_BINARY_DIR@"
#define WAVY_SOURCE_DIRECTORY "@CMAKE_SOURCE_DIR@"
#define WAVY_CURRENT_BINARY_DIR "@CMAKE_CURRENT_BINARY_DIR@"
#define WAVY_CURRENT_SOURCE_DIR "@CMAKE_CURRENT_SOURCE_DIR@"
#define WAVY_PLUGIN_OUTPUT_PATH "@WAVY_PLUGIN_OUTPUT_PATH@"

// === Standard C Headers (ISO C99/C11) ===
#cmakedefine01 WAVY__HAS_ASSERT_H
#cmakedefine01 WAVY__HAS_CTYPE_H
#cmakedefine01 WAVY__HAS_ERRNO_H
#cmakedefine01 WAVY__HAS_FCNTL_H
#cmakedefine01 WAVY__HAS_FLOAT_H
#cmakedefine01 WAVY__HAS_INTTYPES_H
#cmakedefine01 WAVY__HAS_LIMITS_H
#cmakedefine01 WAVY__HAS_MATH_H
#cmakedefine01 WAVY__HAS_SETJMP_H
#cmakedefine01 WAVY__HAS_SIGNAL_H
#cmakedefine01 WAVY__HAS_STDARG_H
#cmakedefine01 WAVY__HAS_STDDEF_H
#cmakedefine01 WAVY__HAS_STDIO_H
#cmakedefine01 WAVY__HAS_STDLIB_H
#cmakedefine01 WAVY__HAS_STRING_H
#cmakedefine01 WAVY__HAS_TIME_H
#cmakedefine01 WAVY__HAS_UNISTD_H
#cmakedefine01 WAVY__HAS_STDBOOL_H
#cmakedefine01 WAVY__HAS_FENV_H
#cmakedefine01 WAVY__HAS_SYS_TYPES_H
#cmakedefine01 WAVY__HAS_STDINT_H

// === Standard C++ Headers (C++11/14/17/20/23) ===
// Core Language Utilities
#cmakedefine01 WAVY__HAS_IOSTREAM
#cmakedefine01 WAVY__HAS_FSTREAM
#cmakedefine01 WAVY__HAS_SSTREAM
#cmakedefine01 WAVY__HAS_VECTOR
#cmakedefine01 WAVY__HAS_ARRAY
#cmakedefine01 WAVY__HAS_STRING
#cmakedefine01 WAVY__HAS_MAP
#cmakedefine01 WAVY__HAS_UNORDERED_MAP
#cmakedefine01 WAVY__HAS_SET
#cmakedefine01 WAVY__HAS_UNORDERED_SET
#cmakedefine01 WAVY__HAS_ALGORITHM
#cmakedefine01 WAVY__HAS_NUMERIC
#cmakedefine01 WAVY__HAS_ITERATOR
#cmakedefine01 WAVY__HAS_MEMORY
#cmakedefine01 WAVY__HAS_FUNCTIONAL
#cmakedefine01 WAVY__HAS_TYPE_TRAITS
#cmakedefine01 WAVY__HAS_LIMITS
#cmakedefine01 WAVY__HAS_CMATH
#cmakedefine01 WAVY__HAS_EXCEPTION
#cmakedefine01 WAVY__HAS_STD_EXCEPT

// Multithreading & Concurrency
#cmakedefine01 WAVY__HAS_THREAD
#cmakedefine01 WAVY__HAS_MUTEX
#cmakedefine01 WAVY__HAS_FUTURE
#cmakedefine01 WAVY__HAS_CONDITION_VARIABLE
#cmakedefine01 WAVY__HAS_CHRONO
#cmakedefine01 WAVY__HAS_BARRIER
#cmakedefine01 WAVY__HAS_LATCH
#cmakedefine01 WAVY__HAS_SEMAPHORE

// Modern C++ Additions
#cmakedefine01 WAVY__HAS_RANDOM
#cmakedefine01 WAVY__HAS_ANY
#cmakedefine01 WAVY__HAS_OPTIONAL
#cmakedefine01 WAVY__HAS_VARIANT
#cmakedefine01 WAVY__HAS_SPAN
#cmakedefine01 WAVY__HAS_CONCEPTS
#cmakedefine01 WAVY__HAS_COROUTINE
#cmakedefine01 WAVY__HAS_VERSION
#cmakedefine01 WAVY__HAS_EXECUTION
#cmakedefine01 WAVY__HAS_SOURCE_LOCATION
#cmakedefine01 WAVY__HAS_STOP_TOKEN
#cmakedefine01 WAVY__HAS_NUMBERS
#cmakedefine01 WAVY__HAS_BIT
#cmakedefine01 WAVY__HAS_FORMAT
#cmakedefine01 WAVY__HAS_EXPECTED
#cmakedefine01 WAVY__HAS_STACKTRACE
#cmakedefine01 WAVY__HAS_MDSPAN
#cmakedefine01 WAVY__HAS_FLAT_MAP

// I/O & Filesystem
#cmakedefine01 WAVY__HAS_FILESYSTEM
#cmakedefine01 WAVY__HAS_SYNCSTREAM
#cmakedefine01 WAVY__HAS_PRINT

// === System/Platform-Specific Headers ===
#cmakedefine01 WAVY__HAS_WINDOWS_H
#cmakedefine01 WAVY__HAS_SYS_STAT_H
#cmakedefine01 WAVY__HAS_SYS_MMAN_H
#cmakedefine01 WAVY__HAS_DIRENT_H
#cmakedefine01 WAVY__HAS_PTHREAD_H
#cmakedefine01 WAVY__HAS_DLFCN_H
#cmakedefine01 WAVY__HAS_COMPLEX

// === Some Macro Defs ===

#if WAVY__HAS_ASSERT_H
#include <cassert>
#include <iostream>
namespace wavy
{
inline void assertion_failed(const char* expr, const char* file, int line)
{
  std::cerr << "Assertion failed: (" << expr << ") in " << file << " at line " << line << std::endl;
}
}
#define WAVY__ASSERT(expr)                                 \
  do                                                       \
  {                                                        \
    if (!(expr))                                           \
    {                                                      \
      ::wavy::assertion_failed(#expr, __FILE__, __LINE__); \
      std::abort();                                        \
    }                                                      \
  } while (0)
#endif

#define WAVY__TYPE_NAME(var) typeid(var).name()
#define WAVY__IS_SAME(A, B)  std::is_same<A, B>::value

#define WAVY__UNREACHABLE()                          \
  do                                                 \
  {                                                  \
    ::wavy::unreachable_reached(__FILE__, __LINE__); \
    std::abort();                                    \
  } while (0)

#define WAVY__NOT_IMPLEMENTED()                            \
  do                                                       \
  {                                                        \
    ::wavy::not_implemented(__FILE__, __LINE__, __func__); \
    std::abort();                                          \
  } while (0)

// === Feature Notes ===
// - These macros are defined as 1 if the header is available, 0 otherwise.
// - Use #if WAVY__HAS_HEADER_XYZ to conditionally include platform features.
// - This header is regenerated automatically by CMake during configuration.
